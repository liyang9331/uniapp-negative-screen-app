<template>
	<view ref="card" class="card" :style="styles" @click="cardClickHandle">
		<!-- 背景图 -->
		<image style="position: absolute;top: 0;left: 0;border-radius: 20rpx;" v-if="card.cardBgPic!=''" :src="card.cardBgPic" :style="styles" mode=""></image>
		<view class="content_1">
			<u--image shape="circle" :src="card.cardLogoPic" width="55rpx" height="55rpx"></u--image>
			<u--text :lines="1" style="margin-left: 20rpx;" :bold="true" :text="card.cardName" size="32rpx" color="#000000">
			</u--text>
		</view>
		<view class="content_2">
			<view class="list-item" v-for="(item,key) in card.list" :key="key" @click.stop="iconHandle($event,item)" :style="{backgroundColor:key==0?'#FFF3E7':'#E8F1FF'}">
				<!-- shape="circle" -->
				<u--image class="icon"  :src="item.icon" width="60rpx" height="60rpx"></u--image>
				<u--text style="margin-left: 20rpx;" class="title" :text="item.title" size="30rpx" color="#000000"></u--text>
			</view>
		</view>
	</view>
</template>

<script>
	// 方形图标卡片
	import mixins from "../mixins.js"
	export default {
		name:"S_icon",
		mixins:[mixins],
		props: {
			styles: {
				type: [Object],
				default: {
					width: '330rpx',
					height: '330rpx'
				}
			}
		},
		data() {
			return {
				rect: {},
			}
		},
		computed: {},
		watch: {},
		created() {
			// this.cardInfo.time = uni.dayjs(this.cardInfo.time).format("MM/DD hh:mm")
			if (Object.keys(this.cardData).length > 0) {
				// 组装数据
				let list = [];
				for (let a = 1; a <= 2; a++) {
					const obj = {
						icon: this.config.baseURL + this.cardData[`icon${a}Pic`],
						title: this.cardData[`icon${a}Text`],
						interface: this.cardData[`icon${a}Interface`]
					}
					list.push(obj)
				}
				this.card.list = list;
			}
		},
		mounted() {

		},
		methods: {
			request(){}
		},
		beforeDestroy() {}
	}
</script>

<style lang="scss" scoped>
	.card {
		padding: 30rpx 30rpx 0rpx 30rpx;
		background-color: #ffffff;
		// flex-direction: row;
		border-radius: 30rpx;
	}

	.content_1 {
		// flex: 1;
		flex-direction: row;
		align-items: center;
		// justify-content: center;
		// background-color: black;
		// border: 1px solid red;
	}

	.content_2 {
		margin-top: 35rpx;
		// flex-direction: row;
		// flex-wrap: wrap;
		// justify-content: space-around;

		& .list-item {
			align-items: center;
			flex-direction: row;
			justify-content: center;
			width: 270rpx;
			padding: 10rpx;
			margin-top: 10rpx;
			border-radius: 10rpx;
			& .icon{
				
			}
			& .title{
				// margin-left: 20rpx;
			}
		}
	}
</style>
