<template>
	<view ref="card" class="card" :style="styles" @click="cardClickHandle">
		<!-- 背景图 -->
		<image style="position: absolute;top: 0;left: 0;border-radius: 20rpx;" v-if="card.cardBgPic!=''" :src="card.cardBgPic" :style="styles" mode=""></image>
		<view class="content_1">
			<u--image shape="circle" :src="card.cardLogoPic" width="55rpx" height="55rpx"></u--image>
			<u--text :lines="1" style="margin-left: 20rpx;" :bold="true" :text="card.cardName" size="32rpx" color="#000000">
			</u--text>
		</view>
		<view class="content_2" @click.stop="iconHandle($event,{interface:message.urlSchemes})">
			<u--text :lines="1" :text="message.title" size="32rpx" color="#000000"></u--text>
			<u--text style="margin-top: 10rpx;" :text="message.date" size="24rpx" color="#000000"></u--text>
		</view>
		<view class="content_3" @click.stop="iconHandle($event,{interface:message.urlSchemes})">
			<u--text style="margin-top: 20rpx;" :lines="3" :text="message.content" size="30rpx" color="#000000">
			</u--text>
		</view>
	</view>
</template>

<script>
	// 方形文字卡片
	import mixins from "../mixins.js"
	export default {
		name: "S_text",
		mixins: [mixins],
		props: {
			styles: {
				type: [Object],
				default: {
					width: '330rpx',
					height: '330rpx'
				}
			}
		},
		data() {
			return {
				rect: {},
				message: {}
			}
		},
		computed: {},
		watch: {},
		created() {
		},
		mounted() {
			
		},
		methods: {
			request(){
				this.card.cardLogoPic = this.insertDomainName("cardLogoPic");
				if (this.isRun) {
					this.api(this.card.cardInterface, {}).then(res => {
						this.message = res.data;
						this.message.date = uni.dayjs(this.message.date).format("MM/DD hh:mm")
					}).catch(err => {
				
					})
				} else {
					//添加卡片页面
					const res = this.storage.get("S_text"+this.card.cardId);
					if (res != null) {
						this.message = res;
						this.message.date = uni.dayjs(this.message.date).format("MM/DD hh:mm")
					} else {
						this.api(this.card.cardInterface, {}).then(res => {
							this.message = res.data;
							this.message.date = uni.dayjs(this.message.date).format("MM/DD hh:mm")
							this.storage.set("S_text"+this.card.cardId, res.data)
						}).catch(err => {
				
						})
					}
				}
			}
		},
		beforeDestroy() {
		}
	}
</script>

<style lang="scss" scoped>
	.card {
		padding: 30rpx 30rpx 0rpx 30rpx;
		background-color: #ffffff;
		// flex-direction: row;
		border-radius: 30rpx;
	}

	.content_1 {
		// flex: 1;
		flex-direction: row;
		align-items: center;
		// justify-content: center;
		// background-color: black;
		// border: 1px solid red;
	}

	.content_2 {
		margin-top: 25rpx;
	}
</style>
